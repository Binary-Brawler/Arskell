if status is-interactive
    # Commands to run in interactive sessions can go here
end

function startUp
	sudo systemctl start dhcpcd
    sleep 15
    sudo pacman -Syu --noconfirm
end

function retry
    cabal clean && cabal build
end

function record
	ffmpeg -f x11grab -video_size 1920x1080 -framerate 25 -i $DISPLAY -c:v ffvhuff $argv
end

function newHasky
    # Check if argument is provided
    if test -z $argv[1]
        echo "Usage: newHasky <project-name>"
        return 1
    end
  
    # TODO: Add Test Dir and default test file 
    set project_name $argv[1]
    set project_dir (realpath $project_name)

    # Create project directory
    mkdir -p $project_dir
    cd $project_dir

    # Create source and test directories
    mkdir -p src/ test/ app/

    # Create README.md
    echo "# $project_name" > README.md

    # Create LICENSE (default to MIT license)
    echo "MIT License" > LICENSE

    # Create .gitignore
    echo "/dist-newstyle/" > .gitignore

    # Create my-project.cabal file
    echo "cabal-version:  3.0
name:           $project_name
version:        0.1.0.0
license:        MIT
build-type:     Simple

library
  exposed-modules:
      Lib
  hs-source-dirs:
      src
  build-depends:
      base ^>=4.16.4.0
  default-language: Haskell2010

executable $project_name
  hs-source-dirs:  app
  main-is:         Main.hs
  build-depends:   base >=4.16.4.0
                   , $project_name
  default-language: Haskell2010" > "$project_name.cabal"

    # Create Main.hs in app directory
    echo "module Main where

import Lib (someFunc)

main :: IO ()
main = someFunc" > app/Main.hs

    # Create Lib.hs in src directory
    echo "module Lib
    ( someFunc
    ) where

someFunc :: IO ()
someFunc = putStrLn \"Project Setup!\"" > src/Lib.hs
    
    # Create test suite
    echo "main :: IO ()
main = putStrLn \"Test suite not yet implemented\"" > test/Test.hs

    cabal build
    cabal run $project_name

    echo "Created new Haskell Lib project '$project_name' in $project_dir"
end



set PATH $HOME/.local/bin $PATH

set -q GHCUP_INSTALL_BASE_PREFIX[1]; or set GHCUP_INSTALL_BASE_PREFIX $HOME ; set -gx PATH $HOME/.cabal/bin $PATH $HOME/.ghcup/bin
